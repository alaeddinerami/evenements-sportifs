import React from "react";
import jsPDF from "jspdf";

const EventDetailModal = ({ event, onClose }) => {
  if (!event) return null;

  const handleDownloadPDF = () => {
    const doc = new jsPDF();

    // Set Title Style
    doc.setFont("helvetica", "bold");
    doc.setFontSize(22);
    doc.setTextColor(40, 40, 40);
    doc.text(event.name, 10, 20);

    // Add Line Separator
    doc.setDrawColor(200, 200, 200); // Light gray
    doc.line(10, 25, 200, 25);

    // Description
    doc.setFont("helvetica", "normal");
    doc.setFontSize(14);
    doc.setTextColor(60, 60, 60);
    doc.text("Description:", 10, 35);
    doc.setFontSize(12);
    doc.text(event.description || "No description provided.", 10, 45, {
      maxWidth: 190,
    });

    // Location
    doc.setFont("helvetica", "bold");
    doc.setFontSize(14);
    doc.setTextColor(40, 40, 40);
    doc.text("Location:", 10, 60);
    doc.setFont("helvetica", "normal");
    doc.setFontSize(12);
    doc.text(event.location || "Not specified.", 10, 70);

    // Date
    doc.setFont("helvetica", "bold");
    doc.setFontSize(14);
    doc.text("Date:", 10, 85);
    doc.setFont("helvetica", "normal");
    doc.text(new Date(event.date).toLocaleString(), 10, 95);

    // Participants
    if (Array.isArray(event.participants) && event.participants.length > 0) {
      doc.setFont("helvetica", "bold");
      doc.text("Participants:", 10, 110);
      doc.setFont("helvetica", "normal");

      event.participants.forEach((participant, index) => {
        doc.text(`- ${participant.name}`, 15, 120 + index * 10, {
          maxWidth: 180,
        });
      });
    } else {
      doc.setFont("helvetica", "normal");
      doc.text("No participants yet.", 10, 110);
    }

    // Footer
    doc.setFont("helvetica", "italic");
    doc.setFontSize(10);
    doc.setTextColor(120, 120, 120);
    doc.text("Generated by Event Management System", 10, 280);

    // Save the PDF
    doc.save(`${event.name}_Details.pdf`);
  };
 
  return (
    <div className="fixed inset-0 bg-gray-800 bg-opacity-50 flex justify-center items-center z-50">
      <div className="bg-white rounded-lg shadow-lg p-6 w-4/5 md:w-2/3">
        <button
          onClick={onClose}
          className="absolute top-4 right-4 text-gray-500 hover:text-gray-800"
        >
          &times;
        </button>
        <h2 className="text-2xl font-bold">{event.name}</h2>
        <img
          src={`http://localhost:3000/${event.image || "default-image.jpg"}`}
          alt={event.name}
          className="w-full h-48 object-cover mt-4"
        />
        <p className="text-gray-700 mt-4">{event.description}</p>
        <p className="text-gray-600 mt-2">
          <strong>Location:</strong> {event.location || "Not specified"}
        </p>
        <p className="text-gray-600 mt-2">
          <strong>Date:</strong> {new Date(event.date).toLocaleString()}
        </p>

     {Array.isArray(event.participants) && event.participants.length > 0 ? (
          <div className="mt-4">
            <h4 className="font-semibold mb-2">Participants:</h4>
            <table className="w-full border-collapse border border-gray-300">
              <thead>
                <tr className="bg-gray-100">
                  <th className="border border-gray-300 px-4 py-2 text-left">#</th>
                  <th className="border border-gray-300 px-4 py-2 text-left">Name</th>
                </tr>
              </thead>
              <tbody>
                {event.participants.map((participant, index) => (
                  <tr key={index} className="hover:bg-gray-50">
                    <td className="border border-gray-300 px-4 py-2">{index + 1}</td>
                    <td className="border border-gray-300 px-4 py-2">{participant.name}</td>
                    
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        ) : (
          <p className="text-gray-600 mt-2">No participants yet.</p>
        )}

        <button
          onClick={onClose}
          className="px-4 py-2 mt-5 bg-red-500 text-white rounded-md hover:bg-red-600"
        >
          Cancel
        </button>
        <button
          onClick={handleDownloadPDF}
          className="px-4 py-2 mt-5 ml-5 bg-yellow-500 text-white rounded-md hover:bg-yellow-600"
        >
          Download PDF
        </button>
      </div>
    </div>
  );
};

export default EventDetailModal;
